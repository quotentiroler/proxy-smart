/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { UpdateMtlsConfigResponseConfig } from './UpdateMtlsConfigResponseConfig';
import {
    UpdateMtlsConfigResponseConfigFromJSON,
    UpdateMtlsConfigResponseConfigFromJSONTyped,
    UpdateMtlsConfigResponseConfigToJSON,
    UpdateMtlsConfigResponseConfigToJSONTyped,
} from './UpdateMtlsConfigResponseConfig';

/**
 * 
 * @export
 * @interface UpdateMtlsConfigResponse
 */
export interface UpdateMtlsConfigResponse {
    /**
     * Whether the update was successful
     * @type {boolean}
     * @memberof UpdateMtlsConfigResponse
     */
    success: boolean;
    /**
     * Success message
     * @type {string}
     * @memberof UpdateMtlsConfigResponse
     */
    message: string;
    /**
     * 
     * @type {UpdateMtlsConfigResponseConfig}
     * @memberof UpdateMtlsConfigResponse
     */
    config: UpdateMtlsConfigResponseConfig;
}

/**
 * Check if a given object implements the UpdateMtlsConfigResponse interface.
 */
export function instanceOfUpdateMtlsConfigResponse(value: object): value is UpdateMtlsConfigResponse {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('config' in value) || value['config'] === undefined) return false;
    return true;
}

export function UpdateMtlsConfigResponseFromJSON(json: any): UpdateMtlsConfigResponse {
    return UpdateMtlsConfigResponseFromJSONTyped(json, false);
}

export function UpdateMtlsConfigResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateMtlsConfigResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'message': json['message'],
        'config': UpdateMtlsConfigResponseConfigFromJSON(json['config']),
    };
}

export function UpdateMtlsConfigResponseToJSON(json: any): UpdateMtlsConfigResponse {
    return UpdateMtlsConfigResponseToJSONTyped(json, false);
}

export function UpdateMtlsConfigResponseToJSONTyped(value?: UpdateMtlsConfigResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'config': UpdateMtlsConfigResponseConfigToJSON(value['config']),
    };
}

