/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetHealth422Response
 */
export interface GetHealth422Response {
    /**
     * 
     * @type {string}
     * @memberof GetHealth422Response
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof GetHealth422Response
     */
    on: string;
    /**
     * 
     * @type {string}
     * @memberof GetHealth422Response
     */
    summary?: string;
    /**
     * 
     * @type {string}
     * @memberof GetHealth422Response
     */
    message?: string;
    /**
     * 
     * @type {any}
     * @memberof GetHealth422Response
     */
    found?: any | null;
    /**
     * 
     * @type {string}
     * @memberof GetHealth422Response
     */
    property?: string;
    /**
     * 
     * @type {string}
     * @memberof GetHealth422Response
     */
    expected?: string;
}

/**
 * Check if a given object implements the GetHealth422Response interface.
 */
export function instanceOfGetHealth422Response(value: object): value is GetHealth422Response {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('on' in value) || value['on'] === undefined) return false;
    return true;
}

export function GetHealth422ResponseFromJSON(json: any): GetHealth422Response {
    return GetHealth422ResponseFromJSONTyped(json, false);
}

export function GetHealth422ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetHealth422Response {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'on': json['on'],
        'summary': json['summary'] == null ? undefined : json['summary'],
        'message': json['message'] == null ? undefined : json['message'],
        'found': json['found'] == null ? undefined : json['found'],
        'property': json['property'] == null ? undefined : json['property'],
        'expected': json['expected'] == null ? undefined : json['expected'],
    };
}

export function GetHealth422ResponseToJSON(json: any): GetHealth422Response {
    return GetHealth422ResponseToJSONTyped(json, false);
}

export function GetHealth422ResponseToJSONTyped(value?: GetHealth422Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'on': value['on'],
        'summary': value['summary'],
        'message': value['message'],
        'found': value['found'],
        'property': value['property'],
        'expected': value['expected'],
    };
}

