/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FhirServerHealthInfo } from './FhirServerHealthInfo';
import {
    FhirServerHealthInfoFromJSON,
    FhirServerHealthInfoFromJSONTyped,
    FhirServerHealthInfoToJSON,
    FhirServerHealthInfoToJSONTyped,
} from './FhirServerHealthInfo';

/**
 * 
 * @export
 * @interface SystemStatusResponseFhir
 */
export interface SystemStatusResponseFhir {
    /**
     * FHIR infrastructure status
     * @type {string}
     * @memberof SystemStatusResponseFhir
     */
    status: string;
    /**
     * Total FHIR servers configured
     * @type {number}
     * @memberof SystemStatusResponseFhir
     */
    totalServers: number;
    /**
     * Number of healthy FHIR servers
     * @type {number}
     * @memberof SystemStatusResponseFhir
     */
    healthyServers: number;
    /**
     * FHIR server status details
     * @type {Array<FhirServerHealthInfo>}
     * @memberof SystemStatusResponseFhir
     */
    servers: Array<FhirServerHealthInfo>;
}

/**
 * Check if a given object implements the SystemStatusResponseFhir interface.
 */
export function instanceOfSystemStatusResponseFhir(value: object): value is SystemStatusResponseFhir {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('totalServers' in value) || value['totalServers'] === undefined) return false;
    if (!('healthyServers' in value) || value['healthyServers'] === undefined) return false;
    if (!('servers' in value) || value['servers'] === undefined) return false;
    return true;
}

export function SystemStatusResponseFhirFromJSON(json: any): SystemStatusResponseFhir {
    return SystemStatusResponseFhirFromJSONTyped(json, false);
}

export function SystemStatusResponseFhirFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemStatusResponseFhir {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'totalServers': json['totalServers'],
        'healthyServers': json['healthyServers'],
        'servers': ((json['servers'] as Array<any>).map(FhirServerHealthInfoFromJSON)),
    };
}

export function SystemStatusResponseFhirToJSON(json: any): SystemStatusResponseFhir {
    return SystemStatusResponseFhirToJSONTyped(json, false);
}

export function SystemStatusResponseFhirToJSONTyped(value?: SystemStatusResponseFhir | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'totalServers': value['totalServers'],
        'healthyServers': value['healthyServers'],
        'servers': ((value['servers'] as Array<any>).map(FhirServerHealthInfoToJSON)),
    };
}

