/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface WebSocketInfoResponse
 */
export interface WebSocketInfoResponse {
    /**
     * WebSocket endpoint URL path
     * @type {string}
     * @memberof WebSocketInfoResponse
     */
    endpoint: string;
    /**
     * Protocol (ws or wss)
     * @type {string}
     * @memberof WebSocketInfoResponse
     */
    protocol: string;
    /**
     * Supported message types
     * @type {Array<string>}
     * @memberof WebSocketInfoResponse
     */
    supportedMessages: Array<string>;
    /**
     * Available subscription types
     * @type {Array<string>}
     * @memberof WebSocketInfoResponse
     */
    subscriptionTypes: Array<string>;
}

/**
 * Check if a given object implements the WebSocketInfoResponse interface.
 */
export function instanceOfWebSocketInfoResponse(value: object): value is WebSocketInfoResponse {
    if (!('endpoint' in value) || value['endpoint'] === undefined) return false;
    if (!('protocol' in value) || value['protocol'] === undefined) return false;
    if (!('supportedMessages' in value) || value['supportedMessages'] === undefined) return false;
    if (!('subscriptionTypes' in value) || value['subscriptionTypes'] === undefined) return false;
    return true;
}

export function WebSocketInfoResponseFromJSON(json: any): WebSocketInfoResponse {
    return WebSocketInfoResponseFromJSONTyped(json, false);
}

export function WebSocketInfoResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): WebSocketInfoResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'endpoint': json['endpoint'],
        'protocol': json['protocol'],
        'supportedMessages': json['supportedMessages'],
        'subscriptionTypes': json['subscriptionTypes'],
    };
}

export function WebSocketInfoResponseToJSON(json: any): WebSocketInfoResponse {
    return WebSocketInfoResponseToJSONTyped(json, false);
}

export function WebSocketInfoResponseToJSONTyped(value?: WebSocketInfoResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'endpoint': value['endpoint'],
        'protocol': value['protocol'],
        'supportedMessages': value['supportedMessages'],
        'subscriptionTypes': value['subscriptionTypes'],
    };
}

