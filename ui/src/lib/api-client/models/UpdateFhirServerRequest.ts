/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateFhirServerRequest
 */
export interface UpdateFhirServerRequest {
    /**
     * New base URL for the FHIR server
     * @type {string}
     * @memberof UpdateFhirServerRequest
     */
    url: string;
    /**
     * New name for the server
     * @type {string}
     * @memberof UpdateFhirServerRequest
     */
    name?: string;
}

/**
 * Check if a given object implements the UpdateFhirServerRequest interface.
 */
export function instanceOfUpdateFhirServerRequest(value: object): value is UpdateFhirServerRequest {
    if (!('url' in value) || value['url'] === undefined) return false;
    return true;
}

export function UpdateFhirServerRequestFromJSON(json: any): UpdateFhirServerRequest {
    return UpdateFhirServerRequestFromJSONTyped(json, false);
}

export function UpdateFhirServerRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateFhirServerRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'url': json['url'],
        'name': json['name'] == null ? undefined : json['name'],
    };
}

export function UpdateFhirServerRequestToJSON(json: any): UpdateFhirServerRequest {
    return UpdateFhirServerRequestToJSONTyped(json, false);
}

export function UpdateFhirServerRequestToJSONTyped(value?: UpdateFhirServerRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'url': value['url'],
        'name': value['name'],
    };
}

