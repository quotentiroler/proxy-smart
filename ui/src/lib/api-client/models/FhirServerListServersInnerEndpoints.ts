/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FhirServerListServersInnerEndpoints
 */
export interface FhirServerListServersInnerEndpoints {
    /**
     * Base FHIR endpoint URL
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    base: string;
    /**
     * SMART configuration endpoint URL
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    smartConfig: string;
    /**
     * FHIR capability statement endpoint URL
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    metadata: string;
    /**
     * OAuth2 authorization endpoint
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    authorize?: string;
    /**
     * OAuth2 token endpoint
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    token?: string;
    /**
     * Dynamic client registration endpoint (RFC 7591)
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    registration?: string;
    /**
     * Token management endpoint
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    manage?: string;
    /**
     * Token introspection endpoint
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    introspection?: string;
    /**
     * Token revocation endpoint
     * @type {string}
     * @memberof FhirServerListServersInnerEndpoints
     */
    revocation?: string;
}

/**
 * Check if a given object implements the FhirServerListServersInnerEndpoints interface.
 */
export function instanceOfFhirServerListServersInnerEndpoints(value: object): value is FhirServerListServersInnerEndpoints {
    if (!('base' in value) || value['base'] === undefined) return false;
    if (!('smartConfig' in value) || value['smartConfig'] === undefined) return false;
    if (!('metadata' in value) || value['metadata'] === undefined) return false;
    return true;
}

export function FhirServerListServersInnerEndpointsFromJSON(json: any): FhirServerListServersInnerEndpoints {
    return FhirServerListServersInnerEndpointsFromJSONTyped(json, false);
}

export function FhirServerListServersInnerEndpointsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FhirServerListServersInnerEndpoints {
    if (json == null) {
        return json;
    }
    return {
        
        'base': json['base'],
        'smartConfig': json['smartConfig'],
        'metadata': json['metadata'],
        'authorize': json['authorize'] == null ? undefined : json['authorize'],
        'token': json['token'] == null ? undefined : json['token'],
        'registration': json['registration'] == null ? undefined : json['registration'],
        'manage': json['manage'] == null ? undefined : json['manage'],
        'introspection': json['introspection'] == null ? undefined : json['introspection'],
        'revocation': json['revocation'] == null ? undefined : json['revocation'],
    };
}

export function FhirServerListServersInnerEndpointsToJSON(json: any): FhirServerListServersInnerEndpoints {
    return FhirServerListServersInnerEndpointsToJSONTyped(json, false);
}

export function FhirServerListServersInnerEndpointsToJSONTyped(value?: FhirServerListServersInnerEndpoints | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'base': value['base'],
        'smartConfig': value['smartConfig'],
        'metadata': value['metadata'],
        'authorize': value['authorize'],
        'token': value['token'],
        'registration': value['registration'],
        'manage': value['manage'],
        'introspection': value['introspection'],
        'revocation': value['revocation'],
    };
}

