/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetStatus200ResponseFhir
 */
export interface GetStatus200ResponseFhir {
    /**
     * FHIR server status
     * @type {string}
     * @memberof GetStatus200ResponseFhir
     */
    status: string;
    /**
     * Whether FHIR server is accessible
     * @type {boolean}
     * @memberof GetStatus200ResponseFhir
     */
    accessible: boolean;
    /**
     * FHIR server version
     * @type {string}
     * @memberof GetStatus200ResponseFhir
     */
    version: string;
    /**
     * FHIR server software name
     * @type {string}
     * @memberof GetStatus200ResponseFhir
     */
    serverName?: string;
    /**
     * FHIR server software version
     * @type {string}
     * @memberof GetStatus200ResponseFhir
     */
    serverVersion?: string;
}

/**
 * Check if a given object implements the GetStatus200ResponseFhir interface.
 */
export function instanceOfGetStatus200ResponseFhir(value: object): value is GetStatus200ResponseFhir {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('accessible' in value) || value['accessible'] === undefined) return false;
    if (!('version' in value) || value['version'] === undefined) return false;
    return true;
}

export function GetStatus200ResponseFhirFromJSON(json: any): GetStatus200ResponseFhir {
    return GetStatus200ResponseFhirFromJSONTyped(json, false);
}

export function GetStatus200ResponseFhirFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetStatus200ResponseFhir {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'accessible': json['accessible'],
        'version': json['version'],
        'serverName': json['serverName'] == null ? undefined : json['serverName'],
        'serverVersion': json['serverVersion'] == null ? undefined : json['serverVersion'],
    };
}

export function GetStatus200ResponseFhirToJSON(json: any): GetStatus200ResponseFhir {
    return GetStatus200ResponseFhirToJSONTyped(json, false);
}

export function GetStatus200ResponseFhirToJSONTyped(value?: GetStatus200ResponseFhir | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'accessible': value['accessible'],
        'version': value['version'],
        'serverName': value['serverName'],
        'serverVersion': value['serverVersion'],
    };
}

