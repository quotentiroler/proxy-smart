/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateMtlsConfigRequest
 */
export interface UpdateMtlsConfigRequest {
    /**
     * Enable or disable mTLS for this server
     * @type {boolean}
     * @memberof UpdateMtlsConfigRequest
     */
    enabled: boolean;
}

/**
 * Check if a given object implements the UpdateMtlsConfigRequest interface.
 */
export function instanceOfUpdateMtlsConfigRequest(value: object): value is UpdateMtlsConfigRequest {
    if (!('enabled' in value) || value['enabled'] === undefined) return false;
    return true;
}

export function UpdateMtlsConfigRequestFromJSON(json: any): UpdateMtlsConfigRequest {
    return UpdateMtlsConfigRequestFromJSONTyped(json, false);
}

export function UpdateMtlsConfigRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateMtlsConfigRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'enabled': json['enabled'],
    };
}

export function UpdateMtlsConfigRequestToJSON(json: any): UpdateMtlsConfigRequest {
    return UpdateMtlsConfigRequestToJSONTyped(json, false);
}

export function UpdateMtlsConfigRequestToJSONTyped(value?: UpdateMtlsConfigRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'enabled': value['enabled'],
    };
}

