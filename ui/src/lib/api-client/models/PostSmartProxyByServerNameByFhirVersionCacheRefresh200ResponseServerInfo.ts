/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR Proxy
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.5-alpha.202508051423.429852e
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo
 */
export interface PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo {
    /**
     * FHIR version supported by server
     * @type {string}
     * @memberof PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo
     */
    fhirVersion: string;
    /**
     * Server software version
     * @type {string}
     * @memberof PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo
     */
    serverVersion?: string;
    /**
     * Server software name
     * @type {string}
     * @memberof PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo
     */
    serverName?: string;
    /**
     * Whether this version is supported
     * @type {boolean}
     * @memberof PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo
     */
    supported: boolean;
}

/**
 * Check if a given object implements the PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo interface.
 */
export function instanceOfPostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo(value: object): value is PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo {
    if (!('fhirVersion' in value) || value['fhirVersion'] === undefined) return false;
    if (!('supported' in value) || value['supported'] === undefined) return false;
    return true;
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoFromJSON(json: any): PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo {
    return PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoFromJSONTyped(json, false);
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'fhirVersion': json['fhirVersion'],
        'serverVersion': json['serverVersion'] == null ? undefined : json['serverVersion'],
        'serverName': json['serverName'] == null ? undefined : json['serverName'],
        'supported': json['supported'],
    };
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoToJSON(json: any): PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo {
    return PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoToJSONTyped(json, false);
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoToJSONTyped(value?: PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'fhirVersion': value['fhirVersion'],
        'serverVersion': value['serverVersion'],
        'serverName': value['serverName'],
        'supported': value['supported'],
    };
}

