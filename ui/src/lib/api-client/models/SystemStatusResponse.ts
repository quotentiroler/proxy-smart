/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SystemStatusResponseKeycloak } from './SystemStatusResponseKeycloak';
import {
    SystemStatusResponseKeycloakFromJSON,
    SystemStatusResponseKeycloakFromJSONTyped,
    SystemStatusResponseKeycloakToJSON,
    SystemStatusResponseKeycloakToJSONTyped,
} from './SystemStatusResponseKeycloak';
import type { SystemStatusResponseFhir } from './SystemStatusResponseFhir';
import {
    SystemStatusResponseFhirFromJSON,
    SystemStatusResponseFhirFromJSONTyped,
    SystemStatusResponseFhirToJSON,
    SystemStatusResponseFhirToJSONTyped,
} from './SystemStatusResponseFhir';
import type { SystemStatusResponseMemory } from './SystemStatusResponseMemory';
import {
    SystemStatusResponseMemoryFromJSON,
    SystemStatusResponseMemoryFromJSONTyped,
    SystemStatusResponseMemoryToJSON,
    SystemStatusResponseMemoryToJSONTyped,
} from './SystemStatusResponseMemory';

/**
 * 
 * @export
 * @interface SystemStatusResponse
 */
export interface SystemStatusResponse {
    /**
     * API version
     * @type {string}
     * @memberof SystemStatusResponse
     */
    version: string;
    /**
     * Timestamp (ISO 8601)
     * @type {string}
     * @memberof SystemStatusResponse
     */
    timestamp: string;
    /**
     * Server uptime in milliseconds
     * @type {number}
     * @memberof SystemStatusResponse
     */
    uptime: number;
    /**
     * Overall system status
     * @type {string}
     * @memberof SystemStatusResponse
     */
    overall: string;
    /**
     * 
     * @type {SystemStatusResponseFhir}
     * @memberof SystemStatusResponse
     */
    fhir: SystemStatusResponseFhir;
    /**
     * 
     * @type {SystemStatusResponseKeycloak}
     * @memberof SystemStatusResponse
     */
    keycloak: SystemStatusResponseKeycloak;
    /**
     * 
     * @type {SystemStatusResponseMemory}
     * @memberof SystemStatusResponse
     */
    memory: SystemStatusResponseMemory;
}

/**
 * Check if a given object implements the SystemStatusResponse interface.
 */
export function instanceOfSystemStatusResponse(value: object): value is SystemStatusResponse {
    if (!('version' in value) || value['version'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('uptime' in value) || value['uptime'] === undefined) return false;
    if (!('overall' in value) || value['overall'] === undefined) return false;
    if (!('fhir' in value) || value['fhir'] === undefined) return false;
    if (!('keycloak' in value) || value['keycloak'] === undefined) return false;
    if (!('memory' in value) || value['memory'] === undefined) return false;
    return true;
}

export function SystemStatusResponseFromJSON(json: any): SystemStatusResponse {
    return SystemStatusResponseFromJSONTyped(json, false);
}

export function SystemStatusResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemStatusResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'],
        'timestamp': json['timestamp'],
        'uptime': json['uptime'],
        'overall': json['overall'],
        'fhir': SystemStatusResponseFhirFromJSON(json['fhir']),
        'keycloak': SystemStatusResponseKeycloakFromJSON(json['keycloak']),
        'memory': SystemStatusResponseMemoryFromJSON(json['memory']),
    };
}

export function SystemStatusResponseToJSON(json: any): SystemStatusResponse {
    return SystemStatusResponseToJSONTyped(json, false);
}

export function SystemStatusResponseToJSONTyped(value?: SystemStatusResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'version': value['version'],
        'timestamp': value['timestamp'],
        'uptime': value['uptime'],
        'overall': value['overall'],
        'fhir': SystemStatusResponseFhirToJSON(value['fhir']),
        'keycloak': SystemStatusResponseKeycloakToJSON(value['keycloak']),
        'memory': SystemStatusResponseMemoryToJSON(value['memory']),
    };
}

