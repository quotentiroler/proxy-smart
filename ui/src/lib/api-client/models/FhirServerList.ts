/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FhirServerListServersInner } from './FhirServerListServersInner';
import {
    FhirServerListServersInnerFromJSON,
    FhirServerListServersInnerFromJSONTyped,
    FhirServerListServersInnerToJSON,
    FhirServerListServersInnerToJSONTyped,
} from './FhirServerListServersInner';

/**
 * 
 * @export
 * @interface FhirServerList
 */
export interface FhirServerList {
    /**
     * Total number of configured servers
     * @type {number}
     * @memberof FhirServerList
     */
    totalServers: number;
    /**
     * 
     * @type {Array<FhirServerListServersInner>}
     * @memberof FhirServerList
     */
    servers: Array<FhirServerListServersInner>;
}

/**
 * Check if a given object implements the FhirServerList interface.
 */
export function instanceOfFhirServerList(value: object): value is FhirServerList {
    if (!('totalServers' in value) || value['totalServers'] === undefined) return false;
    if (!('servers' in value) || value['servers'] === undefined) return false;
    return true;
}

export function FhirServerListFromJSON(json: any): FhirServerList {
    return FhirServerListFromJSONTyped(json, false);
}

export function FhirServerListFromJSONTyped(json: any, ignoreDiscriminator: boolean): FhirServerList {
    if (json == null) {
        return json;
    }
    return {
        
        'totalServers': json['totalServers'],
        'servers': ((json['servers'] as Array<any>).map(FhirServerListServersInnerFromJSON)),
    };
}

export function FhirServerListToJSON(json: any): FhirServerList {
    return FhirServerListToJSONTyped(json, false);
}

export function FhirServerListToJSONTyped(value?: FhirServerList | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'totalServers': value['totalServers'],
        'servers': ((value['servers'] as Array<any>).map(FhirServerListServersInnerToJSON)),
    };
}

