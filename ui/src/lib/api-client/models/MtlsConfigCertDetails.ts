/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MtlsConfigCertDetails
 */
export interface MtlsConfigCertDetails {
    /**
     * Certificate subject DN
     * @type {string}
     * @memberof MtlsConfigCertDetails
     */
    subject: string;
    /**
     * Certificate issuer DN
     * @type {string}
     * @memberof MtlsConfigCertDetails
     */
    issuer: string;
    /**
     * Certificate validity start date (ISO 8601)
     * @type {string}
     * @memberof MtlsConfigCertDetails
     */
    validFrom: string;
    /**
     * Certificate validity end date (ISO 8601)
     * @type {string}
     * @memberof MtlsConfigCertDetails
     */
    validTo: string;
    /**
     * Certificate fingerprint (SHA-256)
     * @type {string}
     * @memberof MtlsConfigCertDetails
     */
    fingerprint: string;
}

/**
 * Check if a given object implements the MtlsConfigCertDetails interface.
 */
export function instanceOfMtlsConfigCertDetails(value: object): value is MtlsConfigCertDetails {
    if (!('subject' in value) || value['subject'] === undefined) return false;
    if (!('issuer' in value) || value['issuer'] === undefined) return false;
    if (!('validFrom' in value) || value['validFrom'] === undefined) return false;
    if (!('validTo' in value) || value['validTo'] === undefined) return false;
    if (!('fingerprint' in value) || value['fingerprint'] === undefined) return false;
    return true;
}

export function MtlsConfigCertDetailsFromJSON(json: any): MtlsConfigCertDetails {
    return MtlsConfigCertDetailsFromJSONTyped(json, false);
}

export function MtlsConfigCertDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): MtlsConfigCertDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'subject': json['subject'],
        'issuer': json['issuer'],
        'validFrom': json['validFrom'],
        'validTo': json['validTo'],
        'fingerprint': json['fingerprint'],
    };
}

export function MtlsConfigCertDetailsToJSON(json: any): MtlsConfigCertDetails {
    return MtlsConfigCertDetailsToJSONTyped(json, false);
}

export function MtlsConfigCertDetailsToJSONTyped(value?: MtlsConfigCertDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subject': value['subject'],
        'issuer': value['issuer'],
        'validFrom': value['validFrom'],
        'validTo': value['validTo'],
        'fingerprint': value['fingerprint'],
    };
}

