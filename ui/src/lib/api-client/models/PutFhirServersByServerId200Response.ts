/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PutFhirServersByServerId200ResponseServer } from './PutFhirServersByServerId200ResponseServer';
import {
    PutFhirServersByServerId200ResponseServerFromJSON,
    PutFhirServersByServerId200ResponseServerFromJSONTyped,
    PutFhirServersByServerId200ResponseServerToJSON,
    PutFhirServersByServerId200ResponseServerToJSONTyped,
} from './PutFhirServersByServerId200ResponseServer';

/**
 * 
 * @export
 * @interface PutFhirServersByServerId200Response
 */
export interface PutFhirServersByServerId200Response {
    /**
     * Whether the server was updated successfully
     * @type {boolean}
     * @memberof PutFhirServersByServerId200Response
     */
    success: boolean;
    /**
     * Success message
     * @type {string}
     * @memberof PutFhirServersByServerId200Response
     */
    message: string;
    /**
     * 
     * @type {PutFhirServersByServerId200ResponseServer}
     * @memberof PutFhirServersByServerId200Response
     */
    server: PutFhirServersByServerId200ResponseServer;
}

/**
 * Check if a given object implements the PutFhirServersByServerId200Response interface.
 */
export function instanceOfPutFhirServersByServerId200Response(value: object): value is PutFhirServersByServerId200Response {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('server' in value) || value['server'] === undefined) return false;
    return true;
}

export function PutFhirServersByServerId200ResponseFromJSON(json: any): PutFhirServersByServerId200Response {
    return PutFhirServersByServerId200ResponseFromJSONTyped(json, false);
}

export function PutFhirServersByServerId200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PutFhirServersByServerId200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'message': json['message'],
        'server': PutFhirServersByServerId200ResponseServerFromJSON(json['server']),
    };
}

export function PutFhirServersByServerId200ResponseToJSON(json: any): PutFhirServersByServerId200Response {
    return PutFhirServersByServerId200ResponseToJSONTyped(json, false);
}

export function PutFhirServersByServerId200ResponseToJSONTyped(value?: PutFhirServersByServerId200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'server': PutFhirServersByServerId200ResponseServerToJSON(value['server']),
    };
}

