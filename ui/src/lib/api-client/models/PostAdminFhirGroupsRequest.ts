/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostAdminFhirGroupsRequestIdentifierInner } from './PostAdminFhirGroupsRequestIdentifierInner';
import {
    PostAdminFhirGroupsRequestIdentifierInnerFromJSON,
    PostAdminFhirGroupsRequestIdentifierInnerFromJSONTyped,
    PostAdminFhirGroupsRequestIdentifierInnerToJSON,
    PostAdminFhirGroupsRequestIdentifierInnerToJSONTyped,
} from './PostAdminFhirGroupsRequestIdentifierInner';
import type { GetAdminFhirGroups200ResponseInnerType } from './GetAdminFhirGroups200ResponseInnerType';
import {
    GetAdminFhirGroups200ResponseInnerTypeFromJSON,
    GetAdminFhirGroups200ResponseInnerTypeFromJSONTyped,
    GetAdminFhirGroups200ResponseInnerTypeToJSON,
    GetAdminFhirGroups200ResponseInnerTypeToJSONTyped,
} from './GetAdminFhirGroups200ResponseInnerType';
import type { PostAdminFhirGroupsRequestCode } from './PostAdminFhirGroupsRequestCode';
import {
    PostAdminFhirGroupsRequestCodeFromJSON,
    PostAdminFhirGroupsRequestCodeFromJSONTyped,
    PostAdminFhirGroupsRequestCodeToJSON,
    PostAdminFhirGroupsRequestCodeToJSONTyped,
} from './PostAdminFhirGroupsRequestCode';
import type { PostAdminFhirGroupsRequestCharacteristicInner } from './PostAdminFhirGroupsRequestCharacteristicInner';
import {
    PostAdminFhirGroupsRequestCharacteristicInnerFromJSON,
    PostAdminFhirGroupsRequestCharacteristicInnerFromJSONTyped,
    PostAdminFhirGroupsRequestCharacteristicInnerToJSON,
    PostAdminFhirGroupsRequestCharacteristicInnerToJSONTyped,
} from './PostAdminFhirGroupsRequestCharacteristicInner';
import type { PostAdminFhirGroupsRequestMemberInner } from './PostAdminFhirGroupsRequestMemberInner';
import {
    PostAdminFhirGroupsRequestMemberInnerFromJSON,
    PostAdminFhirGroupsRequestMemberInnerFromJSONTyped,
    PostAdminFhirGroupsRequestMemberInnerToJSON,
    PostAdminFhirGroupsRequestMemberInnerToJSONTyped,
} from './PostAdminFhirGroupsRequestMemberInner';
import type { PostAdminFhirGroupsRequestManagingEntity } from './PostAdminFhirGroupsRequestManagingEntity';
import {
    PostAdminFhirGroupsRequestManagingEntityFromJSON,
    PostAdminFhirGroupsRequestManagingEntityFromJSONTyped,
    PostAdminFhirGroupsRequestManagingEntityToJSON,
    PostAdminFhirGroupsRequestManagingEntityToJSONTyped,
} from './PostAdminFhirGroupsRequestManagingEntity';

/**
 * 
 * @export
 * @interface PostAdminFhirGroupsRequest
 */
export interface PostAdminFhirGroupsRequest {
    /**
     * Group ID (auto-generated if not provided)
     * @type {string}
     * @memberof PostAdminFhirGroupsRequest
     */
    id?: string;
    /**
     * 
     * @type {Array<PostAdminFhirGroupsRequestIdentifierInner>}
     * @memberof PostAdminFhirGroupsRequest
     */
    identifier?: Array<PostAdminFhirGroupsRequestIdentifierInner>;
    /**
     * Whether the group is active
     * @type {boolean}
     * @memberof PostAdminFhirGroupsRequest
     */
    active?: boolean;
    /**
     * 
     * @type {GetAdminFhirGroups200ResponseInnerType}
     * @memberof PostAdminFhirGroupsRequest
     */
    type: GetAdminFhirGroups200ResponseInnerType;
    /**
     * Whether the group is actual (true) or definitional (false)
     * @type {boolean}
     * @memberof PostAdminFhirGroupsRequest
     */
    actual: boolean;
    /**
     * 
     * @type {PostAdminFhirGroupsRequestCode}
     * @memberof PostAdminFhirGroupsRequest
     */
    code?: PostAdminFhirGroupsRequestCode;
    /**
     * Human-readable name for the group
     * @type {string}
     * @memberof PostAdminFhirGroupsRequest
     */
    name?: string;
    /**
     * Description of the group
     * @type {string}
     * @memberof PostAdminFhirGroupsRequest
     */
    description?: string;
    /**
     * 
     * @type {PostAdminFhirGroupsRequestManagingEntity}
     * @memberof PostAdminFhirGroupsRequest
     */
    managingEntity?: PostAdminFhirGroupsRequestManagingEntity;
    /**
     * 
     * @type {Array<PostAdminFhirGroupsRequestCharacteristicInner>}
     * @memberof PostAdminFhirGroupsRequest
     */
    characteristic?: Array<PostAdminFhirGroupsRequestCharacteristicInner>;
    /**
     * 
     * @type {Array<PostAdminFhirGroupsRequestMemberInner>}
     * @memberof PostAdminFhirGroupsRequest
     */
    member?: Array<PostAdminFhirGroupsRequestMemberInner>;
}

/**
 * Check if a given object implements the PostAdminFhirGroupsRequest interface.
 */
export function instanceOfPostAdminFhirGroupsRequest(value: object): value is PostAdminFhirGroupsRequest {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('actual' in value) || value['actual'] === undefined) return false;
    return true;
}

export function PostAdminFhirGroupsRequestFromJSON(json: any): PostAdminFhirGroupsRequest {
    return PostAdminFhirGroupsRequestFromJSONTyped(json, false);
}

export function PostAdminFhirGroupsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAdminFhirGroupsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'identifier': json['identifier'] == null ? undefined : ((json['identifier'] as Array<any>).map(PostAdminFhirGroupsRequestIdentifierInnerFromJSON)),
        'active': json['active'] == null ? undefined : json['active'],
        'type': GetAdminFhirGroups200ResponseInnerTypeFromJSON(json['type']),
        'actual': json['actual'],
        'code': json['code'] == null ? undefined : PostAdminFhirGroupsRequestCodeFromJSON(json['code']),
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'managingEntity': json['managingEntity'] == null ? undefined : PostAdminFhirGroupsRequestManagingEntityFromJSON(json['managingEntity']),
        'characteristic': json['characteristic'] == null ? undefined : ((json['characteristic'] as Array<any>).map(PostAdminFhirGroupsRequestCharacteristicInnerFromJSON)),
        'member': json['member'] == null ? undefined : ((json['member'] as Array<any>).map(PostAdminFhirGroupsRequestMemberInnerFromJSON)),
    };
}

export function PostAdminFhirGroupsRequestToJSON(json: any): PostAdminFhirGroupsRequest {
    return PostAdminFhirGroupsRequestToJSONTyped(json, false);
}

export function PostAdminFhirGroupsRequestToJSONTyped(value?: PostAdminFhirGroupsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'identifier': value['identifier'] == null ? undefined : ((value['identifier'] as Array<any>).map(PostAdminFhirGroupsRequestIdentifierInnerToJSON)),
        'active': value['active'],
        'type': GetAdminFhirGroups200ResponseInnerTypeToJSON(value['type']),
        'actual': value['actual'],
        'code': PostAdminFhirGroupsRequestCodeToJSON(value['code']),
        'name': value['name'],
        'description': value['description'],
        'managingEntity': PostAdminFhirGroupsRequestManagingEntityToJSON(value['managingEntity']),
        'characteristic': value['characteristic'] == null ? undefined : ((value['characteristic'] as Array<any>).map(PostAdminFhirGroupsRequestCharacteristicInnerToJSON)),
        'member': value['member'] == null ? undefined : ((value['member'] as Array<any>).map(PostAdminFhirGroupsRequestMemberInnerToJSON)),
    };
}

