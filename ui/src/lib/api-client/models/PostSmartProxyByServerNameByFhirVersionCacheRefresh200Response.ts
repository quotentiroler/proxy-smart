/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR Proxy
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.2-alpha.202508032021.4236c2e
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo } from './PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo';
import {
    PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoFromJSON,
    PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoFromJSONTyped,
    PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoToJSON,
    PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoToJSONTyped,
} from './PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo';

/**
 * 
 * @export
 * @interface PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response
 */
export interface PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response {
    /**
     * Whether refresh was successful
     * @type {boolean}
     * @memberof PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response
     */
    success: boolean;
    /**
     * Success message
     * @type {string}
     * @memberof PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response
     */
    message: string;
    /**
     * 
     * @type {PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo}
     * @memberof PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response
     */
    serverInfo: PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfo;
}

/**
 * Check if a given object implements the PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response interface.
 */
export function instanceOfPostSmartProxyByServerNameByFhirVersionCacheRefresh200Response(value: object): value is PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response {
    if (!('success' in value) || value['success'] === undefined) return false;
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('serverInfo' in value) || value['serverInfo'] === undefined) return false;
    return true;
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseFromJSON(json: any): PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response {
    return PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseFromJSONTyped(json, false);
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'success': json['success'],
        'message': json['message'],
        'serverInfo': PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoFromJSON(json['serverInfo']),
    };
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseToJSON(json: any): PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response {
    return PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseToJSONTyped(json, false);
}

export function PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseToJSONTyped(value?: PostSmartProxyByServerNameByFhirVersionCacheRefresh200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'success': value['success'],
        'message': value['message'],
        'serverInfo': PostSmartProxyByServerNameByFhirVersionCacheRefresh200ResponseServerInfoToJSON(value['serverInfo']),
    };
}

