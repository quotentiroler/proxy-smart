/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SystemStatusResponseKeycloak
 */
export interface SystemStatusResponseKeycloak {
    /**
     * Keycloak status
     * @type {string}
     * @memberof SystemStatusResponseKeycloak
     */
    status: string;
    /**
     * Whether Keycloak is accessible
     * @type {boolean}
     * @memberof SystemStatusResponseKeycloak
     */
    accessible: boolean;
    /**
     * Keycloak realm
     * @type {string}
     * @memberof SystemStatusResponseKeycloak
     */
    realm: string;
    /**
     * Last successful connection timestamp
     * @type {string}
     * @memberof SystemStatusResponseKeycloak
     */
    lastConnected?: string;
}

/**
 * Check if a given object implements the SystemStatusResponseKeycloak interface.
 */
export function instanceOfSystemStatusResponseKeycloak(value: object): value is SystemStatusResponseKeycloak {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('accessible' in value) || value['accessible'] === undefined) return false;
    if (!('realm' in value) || value['realm'] === undefined) return false;
    return true;
}

export function SystemStatusResponseKeycloakFromJSON(json: any): SystemStatusResponseKeycloak {
    return SystemStatusResponseKeycloakFromJSONTyped(json, false);
}

export function SystemStatusResponseKeycloakFromJSONTyped(json: any, ignoreDiscriminator: boolean): SystemStatusResponseKeycloak {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'accessible': json['accessible'],
        'realm': json['realm'],
        'lastConnected': json['lastConnected'] == null ? undefined : json['lastConnected'],
    };
}

export function SystemStatusResponseKeycloakToJSON(json: any): SystemStatusResponseKeycloak {
    return SystemStatusResponseKeycloakToJSONTyped(json, false);
}

export function SystemStatusResponseKeycloakToJSONTyped(value?: SystemStatusResponseKeycloak | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'accessible': value['accessible'],
        'realm': value['realm'],
        'lastConnected': value['lastConnected'],
    };
}

