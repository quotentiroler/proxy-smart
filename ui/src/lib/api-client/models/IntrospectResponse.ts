/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IntrospectResponse
 */
export interface IntrospectResponse {
    /**
     * Whether the token is active
     * @type {boolean}
     * @memberof IntrospectResponse
     */
    active: boolean;
    /**
     * Subject (user ID) of the token
     * @type {string}
     * @memberof IntrospectResponse
     */
    sub?: string;
    /**
     * Audience (intended recipient)
     * @type {string}
     * @memberof IntrospectResponse
     */
    aud?: string;
    /**
     * Expiration time (Unix timestamp)
     * @type {number}
     * @memberof IntrospectResponse
     */
    exp?: number;
    /**
     * Granted scopes (space-separated)
     * @type {string}
     * @memberof IntrospectResponse
     */
    scope?: string;
}

/**
 * Check if a given object implements the IntrospectResponse interface.
 */
export function instanceOfIntrospectResponse(value: object): value is IntrospectResponse {
    if (!('active' in value) || value['active'] === undefined) return false;
    return true;
}

export function IntrospectResponseFromJSON(json: any): IntrospectResponse {
    return IntrospectResponseFromJSONTyped(json, false);
}

export function IntrospectResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): IntrospectResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'active': json['active'],
        'sub': json['sub'] == null ? undefined : json['sub'],
        'aud': json['aud'] == null ? undefined : json['aud'],
        'exp': json['exp'] == null ? undefined : json['exp'],
        'scope': json['scope'] == null ? undefined : json['scope'],
    };
}

export function IntrospectResponseToJSON(json: any): IntrospectResponse {
    return IntrospectResponseToJSONTyped(json, false);
}

export function IntrospectResponseToJSONTyped(value?: IntrospectResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'active': value['active'],
        'sub': value['sub'],
        'aud': value['aud'],
        'exp': value['exp'],
        'scope': value['scope'],
    };
}

