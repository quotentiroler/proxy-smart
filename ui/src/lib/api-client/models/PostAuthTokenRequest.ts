/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAuthTokenRequest
 */
export interface PostAuthTokenRequest {
    /**
     * OAuth grant type (authorization_code, password, refresh_token, etc.)
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    grantType: string;
    /**
     * Authorization code (for authorization_code grant)
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    code?: string;
    /**
     * Redirect URI (for authorization_code grant)
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    redirectUri?: string;
    /**
     * OAuth client ID
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    clientId?: string;
    /**
     * OAuth client secret
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    clientSecret?: string;
    /**
     * Username (for password grant)
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    username?: string;
    /**
     * Password (for password grant)
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    password?: string;
    /**
     * Refresh token (for refresh_token grant)
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    refreshToken?: string;
    /**
     * Requested scopes
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    scope?: string;
    /**
     * PKCE code verifier
     * @type {string}
     * @memberof PostAuthTokenRequest
     */
    codeVerifier?: string;
}

/**
 * Check if a given object implements the PostAuthTokenRequest interface.
 */
export function instanceOfPostAuthTokenRequest(value: object): value is PostAuthTokenRequest {
    if (!('grantType' in value) || value['grantType'] === undefined) return false;
    return true;
}

export function PostAuthTokenRequestFromJSON(json: any): PostAuthTokenRequest {
    return PostAuthTokenRequestFromJSONTyped(json, false);
}

export function PostAuthTokenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAuthTokenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'grantType': json['grant_type'],
        'code': json['code'] == null ? undefined : json['code'],
        'redirectUri': json['redirect_uri'] == null ? undefined : json['redirect_uri'],
        'clientId': json['client_id'] == null ? undefined : json['client_id'],
        'clientSecret': json['client_secret'] == null ? undefined : json['client_secret'],
        'username': json['username'] == null ? undefined : json['username'],
        'password': json['password'] == null ? undefined : json['password'],
        'refreshToken': json['refresh_token'] == null ? undefined : json['refresh_token'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'codeVerifier': json['code_verifier'] == null ? undefined : json['code_verifier'],
    };
}

export function PostAuthTokenRequestToJSON(json: any): PostAuthTokenRequest {
    return PostAuthTokenRequestToJSONTyped(json, false);
}

export function PostAuthTokenRequestToJSONTyped(value?: PostAuthTokenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'grant_type': value['grantType'],
        'code': value['code'],
        'redirect_uri': value['redirectUri'],
        'client_id': value['clientId'],
        'client_secret': value['clientSecret'],
        'username': value['username'],
        'password': value['password'],
        'refresh_token': value['refreshToken'],
        'scope': value['scope'],
        'code_verifier': value['codeVerifier'],
    };
}

