/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface OAuthEventFhirContext
 */
export interface OAuthEventFhirContext {
    /**
     * Patient ID
     * @type {string}
     * @memberof OAuthEventFhirContext
     */
    patient?: string;
    /**
     * Encounter ID
     * @type {string}
     * @memberof OAuthEventFhirContext
     */
    encounter?: string;
    /**
     * Location ID
     * @type {string}
     * @memberof OAuthEventFhirContext
     */
    location?: string;
    /**
     * FHIR User ID
     * @type {string}
     * @memberof OAuthEventFhirContext
     */
    fhirUser?: string;
}

/**
 * Check if a given object implements the OAuthEventFhirContext interface.
 */
export function instanceOfOAuthEventFhirContext(value: object): value is OAuthEventFhirContext {
    return true;
}

export function OAuthEventFhirContextFromJSON(json: any): OAuthEventFhirContext {
    return OAuthEventFhirContextFromJSONTyped(json, false);
}

export function OAuthEventFhirContextFromJSONTyped(json: any, ignoreDiscriminator: boolean): OAuthEventFhirContext {
    if (json == null) {
        return json;
    }
    return {
        
        'patient': json['patient'] == null ? undefined : json['patient'],
        'encounter': json['encounter'] == null ? undefined : json['encounter'],
        'location': json['location'] == null ? undefined : json['location'],
        'fhirUser': json['fhirUser'] == null ? undefined : json['fhirUser'],
    };
}

export function OAuthEventFhirContextToJSON(json: any): OAuthEventFhirContext {
    return OAuthEventFhirContextToJSONTyped(json, false);
}

export function OAuthEventFhirContextToJSONTyped(value?: OAuthEventFhirContext | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'patient': value['patient'],
        'encounter': value['encounter'],
        'location': value['location'],
        'fhirUser': value['fhirUser'],
    };
}

