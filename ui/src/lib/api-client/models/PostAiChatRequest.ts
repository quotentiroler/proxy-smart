/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAiChatRequest
 */
export interface PostAiChatRequest {
    /**
     * User question or prompt for the AI assistant
     * @type {string}
     * @memberof PostAiChatRequest
     */
    message: string;
    /**
     * Optional conversation identifier to maintain context between turns
     * @type {string}
     * @memberof PostAiChatRequest
     */
    conversationId?: string;
}

/**
 * Check if a given object implements the PostAiChatRequest interface.
 */
export function instanceOfPostAiChatRequest(value: object): value is PostAiChatRequest {
    if (!('message' in value) || value['message'] === undefined) return false;
    return true;
}

export function PostAiChatRequestFromJSON(json: any): PostAiChatRequest {
    return PostAiChatRequestFromJSONTyped(json, false);
}

export function PostAiChatRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAiChatRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'conversationId': json['conversationId'] == null ? undefined : json['conversationId'],
    };
}

export function PostAiChatRequestToJSON(json: any): PostAiChatRequest {
    return PostAiChatRequestToJSONTyped(json, false);
}

export function PostAiChatRequestToJSONTyped(value?: PostAiChatRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'conversationId': value['conversationId'],
    };
}

