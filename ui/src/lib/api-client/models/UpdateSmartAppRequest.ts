/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpdateSmartAppRequest
 */
export interface UpdateSmartAppRequest {
    /**
     * Application name
     * @type {string}
     * @memberof UpdateSmartAppRequest
     */
    name?: string;
    /**
     * Application description
     * @type {string}
     * @memberof UpdateSmartAppRequest
     */
    description?: string;
    /**
     * Whether the app is enabled
     * @type {boolean}
     * @memberof UpdateSmartAppRequest
     */
    enabled?: boolean;
    /**
     * Allowed redirect URIs
     * @type {Array<string>}
     * @memberof UpdateSmartAppRequest
     */
    redirectUris?: Array<string>;
    /**
     * Allowed web origins
     * @type {Array<string>}
     * @memberof UpdateSmartAppRequest
     */
    webOrigins?: Array<string>;
    /**
     * Default SMART scopes
     * @type {Array<string>}
     * @memberof UpdateSmartAppRequest
     */
    defaultScopes?: Array<string>;
    /**
     * Optional SMART scopes
     * @type {Array<string>}
     * @memberof UpdateSmartAppRequest
     */
    optionalScopes?: Array<string>;
    /**
     * SMART App Launch version
     * @type {string}
     * @memberof UpdateSmartAppRequest
     */
    smartVersion?: string;
    /**
     * FHIR version
     * @type {string}
     * @memberof UpdateSmartAppRequest
     */
    fhirVersion?: string;
}

/**
 * Check if a given object implements the UpdateSmartAppRequest interface.
 */
export function instanceOfUpdateSmartAppRequest(value: object): value is UpdateSmartAppRequest {
    return true;
}

export function UpdateSmartAppRequestFromJSON(json: any): UpdateSmartAppRequest {
    return UpdateSmartAppRequestFromJSONTyped(json, false);
}

export function UpdateSmartAppRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateSmartAppRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'redirectUris': json['redirectUris'] == null ? undefined : json['redirectUris'],
        'webOrigins': json['webOrigins'] == null ? undefined : json['webOrigins'],
        'defaultScopes': json['defaultScopes'] == null ? undefined : json['defaultScopes'],
        'optionalScopes': json['optionalScopes'] == null ? undefined : json['optionalScopes'],
        'smartVersion': json['smartVersion'] == null ? undefined : json['smartVersion'],
        'fhirVersion': json['fhirVersion'] == null ? undefined : json['fhirVersion'],
    };
}

export function UpdateSmartAppRequestToJSON(json: any): UpdateSmartAppRequest {
    return UpdateSmartAppRequestToJSONTyped(json, false);
}

export function UpdateSmartAppRequestToJSONTyped(value?: UpdateSmartAppRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'description': value['description'],
        'enabled': value['enabled'],
        'redirectUris': value['redirectUris'],
        'webOrigins': value['webOrigins'],
        'defaultScopes': value['defaultScopes'],
        'optionalScopes': value['optionalScopes'],
        'smartVersion': value['smartVersion'],
        'fhirVersion': value['fhirVersion'],
    };
}

