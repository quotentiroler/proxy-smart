/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { FhirServerListServersInnerEndpoints } from './FhirServerListServersInnerEndpoints';
import {
    FhirServerListServersInnerEndpointsFromJSON,
    FhirServerListServersInnerEndpointsFromJSONTyped,
    FhirServerListServersInnerEndpointsToJSON,
    FhirServerListServersInnerEndpointsToJSONTyped,
} from './FhirServerListServersInnerEndpoints';

/**
 * 
 * @export
 * @interface FhirServerDetails
 */
export interface FhirServerDetails {
    /**
     * Server identifier/name
     * @type {string}
     * @memberof FhirServerDetails
     */
    name: string;
    /**
     * Base URL of the FHIR server
     * @type {string}
     * @memberof FhirServerDetails
     */
    url: string;
    /**
     * FHIR version (e.g., R4, R5)
     * @type {string}
     * @memberof FhirServerDetails
     */
    fhirVersion: string;
    /**
     * FHIR server software version
     * @type {string}
     * @memberof FhirServerDetails
     */
    serverVersion?: string;
    /**
     * FHIR server software name
     * @type {string}
     * @memberof FhirServerDetails
     */
    serverName?: string;
    /**
     * Whether the server is supported by this proxy
     * @type {boolean}
     * @memberof FhirServerDetails
     */
    supported: boolean;
    /**
     * 
     * @type {FhirServerListServersInnerEndpoints}
     * @memberof FhirServerDetails
     */
    endpoints: FhirServerListServersInnerEndpoints;
}

/**
 * Check if a given object implements the FhirServerDetails interface.
 */
export function instanceOfFhirServerDetails(value: object): value is FhirServerDetails {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('fhirVersion' in value) || value['fhirVersion'] === undefined) return false;
    if (!('supported' in value) || value['supported'] === undefined) return false;
    if (!('endpoints' in value) || value['endpoints'] === undefined) return false;
    return true;
}

export function FhirServerDetailsFromJSON(json: any): FhirServerDetails {
    return FhirServerDetailsFromJSONTyped(json, false);
}

export function FhirServerDetailsFromJSONTyped(json: any, ignoreDiscriminator: boolean): FhirServerDetails {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'url': json['url'],
        'fhirVersion': json['fhirVersion'],
        'serverVersion': json['serverVersion'] == null ? undefined : json['serverVersion'],
        'serverName': json['serverName'] == null ? undefined : json['serverName'],
        'supported': json['supported'],
        'endpoints': FhirServerListServersInnerEndpointsFromJSON(json['endpoints']),
    };
}

export function FhirServerDetailsToJSON(json: any): FhirServerDetails {
    return FhirServerDetailsToJSONTyped(json, false);
}

export function FhirServerDetailsToJSONTyped(value?: FhirServerDetails | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'url': value['url'],
        'fhirVersion': value['fhirVersion'],
        'serverVersion': value['serverVersion'],
        'serverName': value['serverName'],
        'supported': value['supported'],
        'endpoints': FhirServerListServersInnerEndpointsToJSON(value['endpoints']),
    };
}

