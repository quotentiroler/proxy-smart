/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAiChat200ResponseSourcesInner
 */
export interface PostAiChat200ResponseSourcesInner {
    /**
     * Unique chunk identifier
     * @type {string}
     * @memberof PostAiChat200ResponseSourcesInner
     */
    id: string;
    /**
     * Content for this knowledge base chunk
     * @type {string}
     * @memberof PostAiChat200ResponseSourcesInner
     */
    content: string;
    /**
     * Source file or document reference
     * @type {string}
     * @memberof PostAiChat200ResponseSourcesInner
     */
    source: string;
    /**
     * Document title
     * @type {string}
     * @memberof PostAiChat200ResponseSourcesInner
     */
    title: string;
    /**
     * Document category such as admin-ui or smart-on-fhir
     * @type {string}
     * @memberof PostAiChat200ResponseSourcesInner
     */
    category: string;
    /**
     * Optional relevance score when semantic search is used
     * @type {number}
     * @memberof PostAiChat200ResponseSourcesInner
     */
    relevanceScore?: number;
}

/**
 * Check if a given object implements the PostAiChat200ResponseSourcesInner interface.
 */
export function instanceOfPostAiChat200ResponseSourcesInner(value: object): value is PostAiChat200ResponseSourcesInner {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('content' in value) || value['content'] === undefined) return false;
    if (!('source' in value) || value['source'] === undefined) return false;
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('category' in value) || value['category'] === undefined) return false;
    return true;
}

export function PostAiChat200ResponseSourcesInnerFromJSON(json: any): PostAiChat200ResponseSourcesInner {
    return PostAiChat200ResponseSourcesInnerFromJSONTyped(json, false);
}

export function PostAiChat200ResponseSourcesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAiChat200ResponseSourcesInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'content': json['content'],
        'source': json['source'],
        'title': json['title'],
        'category': json['category'],
        'relevanceScore': json['relevance_score'] == null ? undefined : json['relevance_score'],
    };
}

export function PostAiChat200ResponseSourcesInnerToJSON(json: any): PostAiChat200ResponseSourcesInner {
    return PostAiChat200ResponseSourcesInnerToJSONTyped(json, false);
}

export function PostAiChat200ResponseSourcesInnerToJSONTyped(value?: PostAiChat200ResponseSourcesInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'content': value['content'],
        'source': value['source'],
        'title': value['title'],
        'category': value['category'],
        'relevance_score': value['relevanceScore'],
    };
}

