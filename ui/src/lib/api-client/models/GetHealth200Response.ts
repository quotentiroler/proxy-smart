/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR Proxy
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.2-alpha.202508031831.b935ef6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetHealth200ResponseFhirServers } from './GetHealth200ResponseFhirServers';
import {
    GetHealth200ResponseFhirServersFromJSON,
    GetHealth200ResponseFhirServersFromJSONTyped,
    GetHealth200ResponseFhirServersToJSON,
    GetHealth200ResponseFhirServersToJSONTyped,
} from './GetHealth200ResponseFhirServers';
import type { GetHealth200ResponseMemory } from './GetHealth200ResponseMemory';
import {
    GetHealth200ResponseMemoryFromJSON,
    GetHealth200ResponseMemoryFromJSONTyped,
    GetHealth200ResponseMemoryToJSON,
    GetHealth200ResponseMemoryToJSONTyped,
} from './GetHealth200ResponseMemory';

/**
 * 
 * @export
 * @interface GetHealth200Response
 */
export interface GetHealth200Response {
    /**
     * Health status
     * @type {string}
     * @memberof GetHealth200Response
     */
    status: string;
    /**
     * Current timestamp
     * @type {string}
     * @memberof GetHealth200Response
     */
    timestamp: string;
    /**
     * Server uptime in seconds
     * @type {number}
     * @memberof GetHealth200Response
     */
    uptime: number;
    /**
     * 
     * @type {GetHealth200ResponseFhirServers}
     * @memberof GetHealth200Response
     */
    fhirServers: GetHealth200ResponseFhirServers;
    /**
     * 
     * @type {GetHealth200ResponseMemory}
     * @memberof GetHealth200Response
     */
    memory: GetHealth200ResponseMemory;
}

/**
 * Check if a given object implements the GetHealth200Response interface.
 */
export function instanceOfGetHealth200Response(value: object): value is GetHealth200Response {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('uptime' in value) || value['uptime'] === undefined) return false;
    if (!('fhirServers' in value) || value['fhirServers'] === undefined) return false;
    if (!('memory' in value) || value['memory'] === undefined) return false;
    return true;
}

export function GetHealth200ResponseFromJSON(json: any): GetHealth200Response {
    return GetHealth200ResponseFromJSONTyped(json, false);
}

export function GetHealth200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetHealth200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'timestamp': json['timestamp'],
        'uptime': json['uptime'],
        'fhirServers': GetHealth200ResponseFhirServersFromJSON(json['fhirServers']),
        'memory': GetHealth200ResponseMemoryFromJSON(json['memory']),
    };
}

export function GetHealth200ResponseToJSON(json: any): GetHealth200Response {
    return GetHealth200ResponseToJSONTyped(json, false);
}

export function GetHealth200ResponseToJSONTyped(value?: GetHealth200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'timestamp': value['timestamp'],
        'uptime': value['uptime'],
        'fhirServers': GetHealth200ResponseFhirServersToJSON(value['fhirServers']),
        'memory': GetHealth200ResponseMemoryToJSON(value['memory']),
    };
}

