/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ClientRegistrationResponse
 */
export interface ClientRegistrationResponse {
    /**
     * OAuth2 client ID
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    clientId: string;
    /**
     * OAuth2 client secret (for confidential clients)
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    clientSecret?: string;
    /**
     * Client ID issuance timestamp (Unix time)
     * @type {number}
     * @memberof ClientRegistrationResponse
     */
    clientIdIssuedAt: number;
    /**
     * Client secret expiration timestamp (0 = never expires)
     * @type {number}
     * @memberof ClientRegistrationResponse
     */
    clientSecretExpiresAt?: number;
    /**
     * Registered redirect URIs
     * @type {Array<string>}
     * @memberof ClientRegistrationResponse
     */
    redirectUris: Array<string>;
    /**
     * Allowed grant types
     * @type {Array<string>}
     * @memberof ClientRegistrationResponse
     */
    grantTypes: Array<string>;
    /**
     * Allowed response types
     * @type {Array<string>}
     * @memberof ClientRegistrationResponse
     */
    responseTypes: Array<string>;
    /**
     * Human-readable client name
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    clientName?: string;
    /**
     * Client home page URL
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    clientUri?: string;
    /**
     * Client logo URL
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    logoUri?: string;
    /**
     * Granted scopes (space-separated)
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    scope?: string;
    /**
     * Contact email addresses
     * @type {Array<string>}
     * @memberof ClientRegistrationResponse
     */
    contacts?: Array<string>;
    /**
     * Terms of service URL
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    tosUri?: string;
    /**
     * Privacy policy URL
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    policyUri?: string;
    /**
     * JWKS endpoint URL
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    jwksUri?: string;
    /**
     * JSON Web Key Set
     * @type {object}
     * @memberof ClientRegistrationResponse
     */
    jwks?: object;
    /**
     * Token endpoint authentication method
     * @type {string}
     * @memberof ClientRegistrationResponse
     */
    tokenEndpointAuthMethod: string;
    /**
     * Supported FHIR versions
     * @type {Array<string>}
     * @memberof ClientRegistrationResponse
     */
    fhirVersions?: Array<string>;
    /**
     * EHR launch URLs
     * @type {Array<string>}
     * @memberof ClientRegistrationResponse
     */
    launchUris?: Array<string>;
}

/**
 * Check if a given object implements the ClientRegistrationResponse interface.
 */
export function instanceOfClientRegistrationResponse(value: object): value is ClientRegistrationResponse {
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('clientIdIssuedAt' in value) || value['clientIdIssuedAt'] === undefined) return false;
    if (!('redirectUris' in value) || value['redirectUris'] === undefined) return false;
    if (!('grantTypes' in value) || value['grantTypes'] === undefined) return false;
    if (!('responseTypes' in value) || value['responseTypes'] === undefined) return false;
    if (!('tokenEndpointAuthMethod' in value) || value['tokenEndpointAuthMethod'] === undefined) return false;
    return true;
}

export function ClientRegistrationResponseFromJSON(json: any): ClientRegistrationResponse {
    return ClientRegistrationResponseFromJSONTyped(json, false);
}

export function ClientRegistrationResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ClientRegistrationResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'clientId': json['client_id'],
        'clientSecret': json['client_secret'] == null ? undefined : json['client_secret'],
        'clientIdIssuedAt': json['client_id_issued_at'],
        'clientSecretExpiresAt': json['client_secret_expires_at'] == null ? undefined : json['client_secret_expires_at'],
        'redirectUris': json['redirect_uris'],
        'grantTypes': json['grant_types'],
        'responseTypes': json['response_types'],
        'clientName': json['client_name'] == null ? undefined : json['client_name'],
        'clientUri': json['client_uri'] == null ? undefined : json['client_uri'],
        'logoUri': json['logo_uri'] == null ? undefined : json['logo_uri'],
        'scope': json['scope'] == null ? undefined : json['scope'],
        'contacts': json['contacts'] == null ? undefined : json['contacts'],
        'tosUri': json['tos_uri'] == null ? undefined : json['tos_uri'],
        'policyUri': json['policy_uri'] == null ? undefined : json['policy_uri'],
        'jwksUri': json['jwks_uri'] == null ? undefined : json['jwks_uri'],
        'jwks': json['jwks'] == null ? undefined : json['jwks'],
        'tokenEndpointAuthMethod': json['token_endpoint_auth_method'],
        'fhirVersions': json['fhir_versions'] == null ? undefined : json['fhir_versions'],
        'launchUris': json['launch_uris'] == null ? undefined : json['launch_uris'],
    };
}

export function ClientRegistrationResponseToJSON(json: any): ClientRegistrationResponse {
    return ClientRegistrationResponseToJSONTyped(json, false);
}

export function ClientRegistrationResponseToJSONTyped(value?: ClientRegistrationResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client_id': value['clientId'],
        'client_secret': value['clientSecret'],
        'client_id_issued_at': value['clientIdIssuedAt'],
        'client_secret_expires_at': value['clientSecretExpiresAt'],
        'redirect_uris': value['redirectUris'],
        'grant_types': value['grantTypes'],
        'response_types': value['responseTypes'],
        'client_name': value['clientName'],
        'client_uri': value['clientUri'],
        'logo_uri': value['logoUri'],
        'scope': value['scope'],
        'contacts': value['contacts'],
        'tos_uri': value['tosUri'],
        'policy_uri': value['policyUri'],
        'jwks_uri': value['jwksUri'],
        'jwks': value['jwks'],
        'token_endpoint_auth_method': value['tokenEndpointAuthMethod'],
        'fhir_versions': value['fhirVersions'],
        'launch_uris': value['launchUris'],
    };
}

