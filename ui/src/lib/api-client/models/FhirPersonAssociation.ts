/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-RELEASE.202510170109.139bb12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FhirPersonAssociation
 */
export interface FhirPersonAssociation {
    /**
     * FHIR server identifier
     * @type {string}
     * @memberof FhirPersonAssociation
     */
    serverId: string;
    /**
     * FHIR Person resource ID
     * @type {string}
     * @memberof FhirPersonAssociation
     */
    personId: string;
    /**
     * Display name for the Person
     * @type {string}
     * @memberof FhirPersonAssociation
     */
    display?: string;
    /**
     * Creation timestamp (ISO 8601)
     * @type {string}
     * @memberof FhirPersonAssociation
     */
    created?: string;
}

/**
 * Check if a given object implements the FhirPersonAssociation interface.
 */
export function instanceOfFhirPersonAssociation(value: object): value is FhirPersonAssociation {
    if (!('serverId' in value) || value['serverId'] === undefined) return false;
    if (!('personId' in value) || value['personId'] === undefined) return false;
    return true;
}

export function FhirPersonAssociationFromJSON(json: any): FhirPersonAssociation {
    return FhirPersonAssociationFromJSONTyped(json, false);
}

export function FhirPersonAssociationFromJSONTyped(json: any, ignoreDiscriminator: boolean): FhirPersonAssociation {
    if (json == null) {
        return json;
    }
    return {
        
        'serverId': json['serverId'],
        'personId': json['personId'],
        'display': json['display'] == null ? undefined : json['display'],
        'created': json['created'] == null ? undefined : json['created'],
    };
}

export function FhirPersonAssociationToJSON(json: any): FhirPersonAssociation {
    return FhirPersonAssociationToJSONTyped(json, false);
}

export function FhirPersonAssociationToJSONTyped(value?: FhirPersonAssociation | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'serverId': value['serverId'],
        'personId': value['personId'],
        'display': value['display'],
        'created': value['created'],
    };
}

