/* tslint:disable */
/* eslint-disable */
/**
 * Proxy Smart
 * SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia
 *
 * The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MonitoringHealthResponseOauthServer
 */
export interface MonitoringHealthResponseOauthServer {
    /**
     * OAuth server status
     * @type {string}
     * @memberof MonitoringHealthResponseOauthServer
     */
    status: string;
    /**
     * Server uptime in seconds
     * @type {number}
     * @memberof MonitoringHealthResponseOauthServer
     */
    uptime: number;
    /**
     * Average response time in ms
     * @type {number}
     * @memberof MonitoringHealthResponseOauthServer
     */
    responseTime: number;
}

/**
 * Check if a given object implements the MonitoringHealthResponseOauthServer interface.
 */
export function instanceOfMonitoringHealthResponseOauthServer(value: object): value is MonitoringHealthResponseOauthServer {
    if (!('status' in value) || value['status'] === undefined) return false;
    if (!('uptime' in value) || value['uptime'] === undefined) return false;
    if (!('responseTime' in value) || value['responseTime'] === undefined) return false;
    return true;
}

export function MonitoringHealthResponseOauthServerFromJSON(json: any): MonitoringHealthResponseOauthServer {
    return MonitoringHealthResponseOauthServerFromJSONTyped(json, false);
}

export function MonitoringHealthResponseOauthServerFromJSONTyped(json: any, ignoreDiscriminator: boolean): MonitoringHealthResponseOauthServer {
    if (json == null) {
        return json;
    }
    return {
        
        'status': json['status'],
        'uptime': json['uptime'],
        'responseTime': json['responseTime'],
    };
}

export function MonitoringHealthResponseOauthServerToJSON(json: any): MonitoringHealthResponseOauthServer {
    return MonitoringHealthResponseOauthServerToJSONTyped(json, false);
}

export function MonitoringHealthResponseOauthServerToJSONTyped(value?: MonitoringHealthResponseOauthServer | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'status': value['status'],
        'uptime': value['uptime'],
        'responseTime': value['responseTime'],
    };
}

