name: Manual Version Bump

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version increment type'
        required: true
        type: choice
        options:
          - minor
          - major
        default: minor
      custom_version:
        description: 'Custom version (optional, overrides version_type)'
        required: false
        type: string
      branch:
        description: 'Branch to use for version bump'
        required: true
        type: string
        default: 'develop'

# Prevent concurrent version bumps
concurrency:
  group: ${{ github.workflow }}-${{ inputs.branch }}
  cancel-in-progress: true

permissions:
  contents: write
  actions: read

jobs:
  # Validate required secrets early
  validate-secrets:
    name: Validate Required Secrets
    runs-on: ubuntu-latest
    steps:
      - name: Checkout for action access
        uses: actions/checkout@v4
        
      - name: Validate secrets
        uses: ./.github/actions/validate-secrets
        with:
          required-secrets: 'APP_ID,APP_PRIVATE_KEY'
          app-id: ${{ secrets.APP_ID }}
          app-private-key: ${{ secrets.APP_PRIVATE_KEY }}

  manual-version-bump:
    name: Manual Version Bump
    needs: [validate-secrets]
    runs-on: ubuntu-latest
    
    steps:
      - name: Generate GitHub App Token
        id: generate-token
        uses: actions/create-github-app-token@v1
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}
          
      - name: Validate inputs
        run: |
          echo "🔍 Validating inputs..."
          echo "Version type: ${{ inputs.version_type }}"
          echo "Custom version: ${{ inputs.custom_version }}"
          echo "Branch: ${{ inputs.branch }}"
          
          if [ -n "${{ inputs.custom_version }}" ]; then
            echo "✅ Using custom version: ${{ inputs.custom_version }}"
            # Validate semver format
            if [[ ! "${{ inputs.custom_version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "❌ Custom version must be in semver format (x.y.z)"
              exit 1
            fi
          else
            echo "✅ Using version type: ${{ inputs.version_type }}"
          fi

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.branch }}
          fetch-depth: 0
          token: ${{ steps.generate-token.outputs.token }}

      - name: Setup Node.js and Bun with caching
        uses: ./.github/actions/setup-bun-cache
        with:
          bun-version: latest

      - name: Get current version
        id: current
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          # Use our centralized script to get base version
          BASE_VERSION=$(bun run version:base)
          echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
          echo "📋 Current version: $CURRENT_VERSION"
          echo "📋 Base version: $BASE_VERSION"

      - name: Calculate and set new version
        id: calculate
        run: |
          if [ -n "${{ inputs.custom_version }}" ]; then
            NEW_VERSION="${{ inputs.custom_version }}"
            echo "🎯 Using custom version: $NEW_VERSION"
            # Set the custom version using our centralized script
            bun run version:set "$NEW_VERSION"
          else
            # Use our centralized version bump scripts
            case "${{ inputs.version_type }}" in
              "minor")
                bun run version:bump:minor
                NEW_VERSION=$(node -p "require('./package.json').version")
                echo "🚀 Bumped minor version: $NEW_VERSION"
                ;;
              "major")
                bun run version:bump:major
                NEW_VERSION=$(node -p "require('./package.json').version")
                echo "🚀 Bumped major version: $NEW_VERSION"
                ;;
              *)
                echo "❌ Unknown version type: ${{ inputs.version_type }}"
                exit 1
                ;;
            esac
          fi
          
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Validate version operations
        uses: ./.github/workflows/orchestrations/version-operations.yml
        with:
          operation: validate

      - name: Update README and verify versions
        run: |
          NEW_VERSION="${{ steps.calculate.outputs.new_version }}"
          echo "📝 Finalizing version update to: $NEW_VERSION"
          
          # Verify all versions are consistent using our script
          bun run version:check
          
          # Update README version badge
          if [ -f "README.md" ]; then
            sed -i "s/version-[0-9]\+\.[0-9]\+\.[0-9]\+\(-[a-zA-Z0-9\.-]*\)\?-blue/version-$NEW_VERSION-blue/g" README.md
            echo "📝 Updated README.md version badge to $NEW_VERSION"
          fi

      - name: Commit and push changes
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          NEW_VERSION="${{ steps.calculate.outputs.new_version }}"
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Configure git to use the token for authentication
          git config --global url."https://x-access-token:${GITHUB_TOKEN}@github.com/".insteadOf "https://github.com/"
          
          git add .
          git commit -m "🔄 Manual version bump to $NEW_VERSION

          - Version type: ${{ inputs.version_type }}
          - Custom version: ${{ inputs.custom_version || 'N/A' }}
          - Branch: ${{ inputs.branch }}
          - Previous version: ${{ steps.current.outputs.current_version }}
          - New version: $NEW_VERSION"
          
          git push origin ${{ inputs.branch }}
          
          echo "✅ Successfully bumped version to $NEW_VERSION on branch ${{ inputs.branch }}"

      - name: Create summary
        run: |
          cat >> $GITHUB_STEP_SUMMARY << EOF
          # 🚀 Manual Version Bump Complete
          
          ## Version Information
          - **Previous Version**: \`${{ steps.current.outputs.current_version }}\`
          - **New Version**: \`${{ steps.calculate.outputs.new_version }}\`
          - **Version Type**: \`${{ inputs.version_type }}\`
          - **Custom Version**: \`${{ inputs.custom_version || 'N/A' }}\`
          - **Branch**: \`${{ inputs.branch }}\`
          
          ## Changes Made
          - ✅ Updated all package.json files
          - ✅ Updated README.md version badge
          - ✅ Committed and pushed changes
          
          ## Next Steps
          You can now create a release from the updated branch or continue development.
          EOF
