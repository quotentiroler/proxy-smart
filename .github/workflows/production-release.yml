name: Production Release

on:
  push:
    branches: [main]
    paths-ignore:
      - 'ui/src/lib/api-client/**'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: read

jobs:
  check-changes:
    name: Check if release is needed
    runs-on: ubuntu-latest
    outputs:
      should_release: ${{ steps.check.outputs.should_release }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Check changed files
        id: check
        run: |
          # Get list of changed files in the last commit
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"
          
          # Define documentation-only patterns
          DOC_PATTERNS="README\.md|\.md$|docs/|LICENSE|CHANGELOG"
          
          # Check if only documentation files were changed
          NON_DOC_CHANGES=$(echo "$CHANGED_FILES" | grep -vE "$DOC_PATTERNS" || true)
          
          if [ -z "$NON_DOC_CHANGES" ]; then
            echo "Only documentation files changed, skipping production release"
            echo "should_release=false" >> $GITHUB_OUTPUT
          else
            echo "Code changes detected, proceeding with production release"
            echo "should_release=true" >> $GITHUB_OUTPUT
          fi

  # Production releases run full security and compliance testing
  production-testing:
    name: Production Testing (Security & Compliance)
    needs: check-changes
    if: ${{ needs.check-changes.outputs.should_release == 'true' && !contains(github.event.head_commit.message, 'ðŸ”„ Update version') && !contains(github.event.head_commit.message, 'ðŸ¤– Update API clients') && !contains(github.event.head_commit.message, 'Production release') && !contains(github.event.head_commit.message, 'ðŸŽ‰') }}
    uses: ./.github/workflows/testing-strategy.yml
    with:
      test_stage: 'production'
      test_scope: 'all'

  production-release:
    name: Production Release
    needs: [check-changes, production-testing]
    # Only run if the last commit is not a release commit AND there are non-documentation changes
    if: ${{ needs.check-changes.outputs.should_release == 'true' && !contains(github.event.head_commit.message, 'ðŸ”„ Update version') && !contains(github.event.head_commit.message, 'ðŸ¤– Update API clients') && !contains(github.event.head_commit.message, 'Production release') && !contains(github.event.head_commit.message, 'ðŸŽ‰') }}
    uses: ./.github/workflows/release-orchestrator.yml
    with:
      release_type: 'RELEASE'
      source_branch: 'main'
      target_branch: 'main'
      should_bump_version: false
      is_prerelease: false
      commit_limit: 20
    secrets:
      APP_ID: ${{ secrets.APP_ID }}
      APP_PRIVATE_KEY: ${{ secrets.APP_PRIVATE_KEY }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
