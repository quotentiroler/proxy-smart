/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAuthLogin200Response
 */
export interface PostAuthLogin200Response {
    /**
     * JWT access token
     * @type {string}
     * @memberof PostAuthLogin200Response
     */
    accessToken: string;
    /**
     * Token type (Bearer)
     * @type {string}
     * @memberof PostAuthLogin200Response
     */
    tokenType: string;
    /**
     * Token expiration time in seconds
     * @type {number}
     * @memberof PostAuthLogin200Response
     */
    expiresIn?: number;
    /**
     * Refresh token
     * @type {string}
     * @memberof PostAuthLogin200Response
     */
    refreshToken?: string;
    /**
     * Granted scopes
     * @type {string}
     * @memberof PostAuthLogin200Response
     */
    scope?: string;
}

/**
 * Check if a given object implements the PostAuthLogin200Response interface.
 */
export function instanceOfPostAuthLogin200Response(value: object): value is PostAuthLogin200Response {
    if (!('accessToken' in value) || value['accessToken'] === undefined) return false;
    if (!('tokenType' in value) || value['tokenType'] === undefined) return false;
    return true;
}

export function PostAuthLogin200ResponseFromJSON(json: any): PostAuthLogin200Response {
    return PostAuthLogin200ResponseFromJSONTyped(json, false);
}

export function PostAuthLogin200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAuthLogin200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'accessToken': json['access_token'],
        'tokenType': json['token_type'],
        'expiresIn': json['expires_in'] == null ? undefined : json['expires_in'],
        'refreshToken': json['refresh_token'] == null ? undefined : json['refresh_token'],
        'scope': json['scope'] == null ? undefined : json['scope'],
    };
}

export function PostAuthLogin200ResponseToJSON(json: any): PostAuthLogin200Response {
    return PostAuthLogin200ResponseToJSONTyped(json, false);
}

export function PostAuthLogin200ResponseToJSONTyped(value?: PostAuthLogin200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'access_token': value['accessToken'],
        'token_type': value['tokenType'],
        'expires_in': value['expiresIn'],
        'refresh_token': value['refreshToken'],
        'scope': value['scope'],
    };
}

