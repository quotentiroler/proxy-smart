/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostAdminSmartAppsRequest
 */
export interface PostAdminSmartAppsRequest {
    /**
     * Unique client identifier
     * @type {string}
     * @memberof PostAdminSmartAppsRequest
     */
    clientId: string;
    /**
     * Application name
     * @type {string}
     * @memberof PostAdminSmartAppsRequest
     */
    name: string;
    /**
     * Application description
     * @type {string}
     * @memberof PostAdminSmartAppsRequest
     */
    description?: string;
    /**
     * Whether this is a public client (default: false)
     * @type {boolean}
     * @memberof PostAdminSmartAppsRequest
     */
    publicClient?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAdminSmartAppsRequest
     */
    redirectUris?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAdminSmartAppsRequest
     */
    webOrigins?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof PostAdminSmartAppsRequest
     */
    scopes?: Array<string>;
    /**
     * SMART version (default: 2.0.0)
     * @type {string}
     * @memberof PostAdminSmartAppsRequest
     */
    smartVersion?: string;
    /**
     * FHIR version (default: STU3)
     * @type {string}
     * @memberof PostAdminSmartAppsRequest
     */
    fhirVersion?: string;
}

/**
 * Check if a given object implements the PostAdminSmartAppsRequest interface.
 */
export function instanceOfPostAdminSmartAppsRequest(value: object): value is PostAdminSmartAppsRequest {
    if (!('clientId' in value) || value['clientId'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function PostAdminSmartAppsRequestFromJSON(json: any): PostAdminSmartAppsRequest {
    return PostAdminSmartAppsRequestFromJSONTyped(json, false);
}

export function PostAdminSmartAppsRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAdminSmartAppsRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'clientId': json['clientId'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'publicClient': json['publicClient'] == null ? undefined : json['publicClient'],
        'redirectUris': json['redirectUris'] == null ? undefined : json['redirectUris'],
        'webOrigins': json['webOrigins'] == null ? undefined : json['webOrigins'],
        'scopes': json['scopes'] == null ? undefined : json['scopes'],
        'smartVersion': json['smartVersion'] == null ? undefined : json['smartVersion'],
        'fhirVersion': json['fhirVersion'] == null ? undefined : json['fhirVersion'],
    };
}

export function PostAdminSmartAppsRequestToJSON(json: any): PostAdminSmartAppsRequest {
    return PostAdminSmartAppsRequestToJSONTyped(json, false);
}

export function PostAdminSmartAppsRequestToJSONTyped(value?: PostAdminSmartAppsRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'clientId': value['clientId'],
        'name': value['name'],
        'description': value['description'],
        'publicClient': value['publicClient'],
        'redirectUris': value['redirectUris'],
        'webOrigins': value['webOrigins'],
        'scopes': value['scopes'],
        'smartVersion': value['smartVersion'],
        'fhirVersion': value['fhirVersion'],
    };
}

