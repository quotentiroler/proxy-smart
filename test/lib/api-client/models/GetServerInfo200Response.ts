/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GetServerInfo200ResponseServerInfo } from './GetServerInfo200ResponseServerInfo';
import {
    GetServerInfo200ResponseServerInfoFromJSON,
    GetServerInfo200ResponseServerInfoFromJSONTyped,
    GetServerInfo200ResponseServerInfoToJSON,
    GetServerInfo200ResponseServerInfoToJSONTyped,
} from './GetServerInfo200ResponseServerInfo';

/**
 * 
 * @export
 * @interface GetServerInfo200Response
 */
export interface GetServerInfo200Response {
    /**
     * Requested FHIR version
     * @type {string}
     * @memberof GetServerInfo200Response
     */
    requestedVersion: string;
    /**
     * 
     * @type {GetServerInfo200ResponseServerInfo}
     * @memberof GetServerInfo200Response
     */
    serverInfo: GetServerInfo200ResponseServerInfo;
    /**
     * Whether the requested version matches server version
     * @type {boolean}
     * @memberof GetServerInfo200Response
     */
    supported: boolean;
}

/**
 * Check if a given object implements the GetServerInfo200Response interface.
 */
export function instanceOfGetServerInfo200Response(value: object): value is GetServerInfo200Response {
    if (!('requestedVersion' in value) || value['requestedVersion'] === undefined) return false;
    if (!('serverInfo' in value) || value['serverInfo'] === undefined) return false;
    if (!('supported' in value) || value['supported'] === undefined) return false;
    return true;
}

export function GetServerInfo200ResponseFromJSON(json: any): GetServerInfo200Response {
    return GetServerInfo200ResponseFromJSONTyped(json, false);
}

export function GetServerInfo200ResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetServerInfo200Response {
    if (json == null) {
        return json;
    }
    return {
        
        'requestedVersion': json['requestedVersion'],
        'serverInfo': GetServerInfo200ResponseServerInfoFromJSON(json['serverInfo']),
        'supported': json['supported'],
    };
}

export function GetServerInfo200ResponseToJSON(json: any): GetServerInfo200Response {
    return GetServerInfo200ResponseToJSONTyped(json, false);
}

export function GetServerInfo200ResponseToJSONTyped(value?: GetServerInfo200Response | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'requestedVersion': value['requestedVersion'],
        'serverInfo': GetServerInfo200ResponseServerInfoToJSON(value['serverInfo']),
        'supported': value['supported'],
    };
}

