/* tslint:disable */
/* eslint-disable */
/**
 * SMART on FHIR API
 * Healthcare administration API for SMART on FHIR applications
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GetAdminSmartApps200ResponseInner
 */
export interface GetAdminSmartApps200ResponseInner {
    /**
     * Client ID
     * @type {string}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    id?: string;
    /**
     * Client identifier
     * @type {string}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    clientId?: string;
    /**
     * Application name
     * @type {string}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    name?: string;
    /**
     * Application description
     * @type {string}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    description?: string;
    /**
     * Whether app is enabled
     * @type {boolean}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    enabled?: boolean;
    /**
     * OAuth protocol
     * @type {string}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    protocol?: string;
    /**
     * Whether app is public client
     * @type {boolean}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    publicClient?: boolean;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    redirectUris?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    webOrigins?: Array<string>;
    /**
     * 
     * @type {object}
     * @memberof GetAdminSmartApps200ResponseInner
     */
    attributes?: object;
}

/**
 * Check if a given object implements the GetAdminSmartApps200ResponseInner interface.
 */
export function instanceOfGetAdminSmartApps200ResponseInner(value: object): value is GetAdminSmartApps200ResponseInner {
    return true;
}

export function GetAdminSmartApps200ResponseInnerFromJSON(json: any): GetAdminSmartApps200ResponseInner {
    return GetAdminSmartApps200ResponseInnerFromJSONTyped(json, false);
}

export function GetAdminSmartApps200ResponseInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetAdminSmartApps200ResponseInner {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'clientId': json['clientId'] == null ? undefined : json['clientId'],
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'enabled': json['enabled'] == null ? undefined : json['enabled'],
        'protocol': json['protocol'] == null ? undefined : json['protocol'],
        'publicClient': json['publicClient'] == null ? undefined : json['publicClient'],
        'redirectUris': json['redirectUris'] == null ? undefined : json['redirectUris'],
        'webOrigins': json['webOrigins'] == null ? undefined : json['webOrigins'],
        'attributes': json['attributes'] == null ? undefined : json['attributes'],
    };
}

export function GetAdminSmartApps200ResponseInnerToJSON(json: any): GetAdminSmartApps200ResponseInner {
    return GetAdminSmartApps200ResponseInnerToJSONTyped(json, false);
}

export function GetAdminSmartApps200ResponseInnerToJSONTyped(value?: GetAdminSmartApps200ResponseInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'clientId': value['clientId'],
        'name': value['name'],
        'description': value['description'],
        'enabled': value['enabled'],
        'protocol': value['protocol'],
        'publicClient': value['publicClient'],
        'redirectUris': value['redirectUris'],
        'webOrigins': value['webOrigins'],
        'attributes': value['attributes'],
    };
}

