# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-alpha.202510170045.f4d64f5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.fhir_server_list import FhirServerList

class TestFhirServerList(unittest.TestCase):
    """FhirServerList unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FhirServerList:
        """Test FhirServerList
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FhirServerList`
        """
        model = FhirServerList()
        if include_optional:
            return FhirServerList(
                total_servers = 1.337,
                servers = [
                    api_client.models.fhir_server_list_servers_inner.FhirServerList_servers_inner(
                        id = '', 
                        name = '', 
                        url = '', 
                        fhir_version = '', 
                        server_version = '', 
                        server_name = '', 
                        supported = True, 
                        error = '', 
                        endpoints = api_client.models.fhir_server_list_servers_inner_endpoints.FhirServerList_servers_inner_endpoints(
                            base = '', 
                            smart_config = '', 
                            metadata = '', 
                            authorize = '', 
                            token = '', 
                            registration = '', 
                            manage = '', 
                            introspection = '', 
                            revocation = '', ), )
                    ]
            )
        else:
            return FhirServerList(
                total_servers = 1.337,
                servers = [
                    api_client.models.fhir_server_list_servers_inner.FhirServerList_servers_inner(
                        id = '', 
                        name = '', 
                        url = '', 
                        fhir_version = '', 
                        server_version = '', 
                        server_name = '', 
                        supported = True, 
                        error = '', 
                        endpoints = api_client.models.fhir_server_list_servers_inner_endpoints.FhirServerList_servers_inner_endpoints(
                            base = '', 
                            smart_config = '', 
                            metadata = '', 
                            authorize = '', 
                            token = '', 
                            registration = '', 
                            manage = '', 
                            introspection = '', 
                            revocation = '', ), )
                    ],
        )
        """

    def testFhirServerList(self):
        """Test FhirServerList"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
