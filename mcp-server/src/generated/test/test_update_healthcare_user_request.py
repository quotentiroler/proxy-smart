# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-alpha.202510170045.f4d64f5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.update_healthcare_user_request import UpdateHealthcareUserRequest

class TestUpdateHealthcareUserRequest(unittest.TestCase):
    """UpdateHealthcareUserRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateHealthcareUserRequest:
        """Test UpdateHealthcareUserRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateHealthcareUserRequest`
        """
        model = UpdateHealthcareUserRequest()
        if include_optional:
            return UpdateHealthcareUserRequest(
                first_name = '',
                last_name = '',
                email = '',
                enabled = True,
                organization = '',
                fhir_user = '',
                realm_roles = [
                    ''
                    ],
                client_roles = None
            )
        else:
            return UpdateHealthcareUserRequest(
        )
        """

    def testUpdateHealthcareUserRequest(self):
        """Test UpdateHealthcareUserRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
