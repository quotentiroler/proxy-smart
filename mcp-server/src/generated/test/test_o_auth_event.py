# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-alpha.202510170045.f4d64f5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.o_auth_event import OAuthEvent

class TestOAuthEvent(unittest.TestCase):
    """OAuthEvent unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OAuthEvent:
        """Test OAuthEvent
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OAuthEvent`
        """
        model = OAuthEvent()
        if include_optional:
            return OAuthEvent(
                id = '',
                timestamp = '',
                type = '',
                status = '',
                client_id = '',
                scopes = [
                    ''
                    ],
                grant_type = '',
                response_time = 1.337,
                ip_address = '',
                user_agent = '',
                client_name = '',
                user_id = '',
                user_name = '',
                error_message = '',
                error_code = '',
                token_type = '',
                expires_in = 1.337,
                refresh_token = True,
                fhir_context = api_client.models.o_auth_event_fhir_context.OAuthEventFhirContext(
                    patient = '', 
                    encounter = '', 
                    location = '', 
                    fhir_user = '', )
            )
        else:
            return OAuthEvent(
                id = '',
                timestamp = '',
                type = '',
                status = '',
                client_id = '',
                scopes = [
                    ''
                    ],
                grant_type = '',
                response_time = 1.337,
                ip_address = '',
                user_agent = '',
        )
        """

    def testOAuthEvent(self):
        """Test OAuthEvent"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
