# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-alpha.202510170045.f4d64f5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.monitoring_health_response_token_store import MonitoringHealthResponseTokenStore

class TestMonitoringHealthResponseTokenStore(unittest.TestCase):
    """MonitoringHealthResponseTokenStore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MonitoringHealthResponseTokenStore:
        """Test MonitoringHealthResponseTokenStore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MonitoringHealthResponseTokenStore`
        """
        model = MonitoringHealthResponseTokenStore()
        if include_optional:
            return MonitoringHealthResponseTokenStore(
                status = '',
                active_tokens = 1.337,
                storage_used = 1.337
            )
        else:
            return MonitoringHealthResponseTokenStore(
                status = '',
                active_tokens = 1.337,
                storage_used = 1.337,
        )
        """

    def testMonitoringHealthResponseTokenStore(self):
        """Test MonitoringHealthResponseTokenStore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
