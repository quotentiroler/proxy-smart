# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-alpha.202510170045.f4d64f5
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.update_mtls_config_response import UpdateMtlsConfigResponse

class TestUpdateMtlsConfigResponse(unittest.TestCase):
    """UpdateMtlsConfigResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> UpdateMtlsConfigResponse:
        """Test UpdateMtlsConfigResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `UpdateMtlsConfigResponse`
        """
        model = UpdateMtlsConfigResponse()
        if include_optional:
            return UpdateMtlsConfigResponse(
                success = True,
                message = '',
                config = api_client.models.update_mtls_config_response_config.UpdateMtlsConfigResponse_config(
                    enabled = True, 
                    has_certificates = api_client.models.mtls_config_has_certificates.MtlsConfig_hasCertificates(
                        client_cert = True, 
                        client_key = True, 
                        ca_cert = True, ), )
            )
        else:
            return UpdateMtlsConfigResponse(
                success = True,
                message = '',
                config = api_client.models.update_mtls_config_response_config.UpdateMtlsConfigResponse_config(
                    enabled = True, 
                    has_certificates = api_client.models.mtls_config_has_certificates.MtlsConfig_hasCertificates(
                        client_cert = True, 
                        client_key = True, 
                        ca_cert = True, ), ),
        )
        """

    def testUpdateMtlsConfigResponse(self):
        """Test UpdateMtlsConfigResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
