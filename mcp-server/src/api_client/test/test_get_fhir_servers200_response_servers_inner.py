# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.get_fhir_servers200_response_servers_inner import GetFhirServers200ResponseServersInner

class TestGetFhirServers200ResponseServersInner(unittest.TestCase):
    """GetFhirServers200ResponseServersInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetFhirServers200ResponseServersInner:
        """Test GetFhirServers200ResponseServersInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetFhirServers200ResponseServersInner`
        """
        model = GetFhirServers200ResponseServersInner()
        if include_optional:
            return GetFhirServers200ResponseServersInner(
                id = '',
                name = '',
                url = '',
                fhir_version = '',
                server_version = '',
                server_name = '',
                supported = True,
                error = '',
                endpoints = api_client.models.get_fhir_servers_200_response_servers_inner_endpoints.getFhir_servers_200_response_servers_inner_endpoints(
                    base = '', 
                    smart_config = '', 
                    metadata = '', )
            )
        else:
            return GetFhirServers200ResponseServersInner(
                id = '',
                name = '',
                url = '',
                fhir_version = '',
                supported = True,
                endpoints = api_client.models.get_fhir_servers_200_response_servers_inner_endpoints.getFhir_servers_200_response_servers_inner_endpoints(
                    base = '', 
                    smart_config = '', 
                    metadata = '', ),
        )
        """

    def testGetFhirServers200ResponseServersInner(self):
        """Test GetFhirServers200ResponseServersInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
