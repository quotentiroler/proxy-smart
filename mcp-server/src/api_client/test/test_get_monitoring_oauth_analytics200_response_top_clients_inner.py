# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.get_monitoring_oauth_analytics200_response_top_clients_inner import GetMonitoringOauthAnalytics200ResponseTopClientsInner

class TestGetMonitoringOauthAnalytics200ResponseTopClientsInner(unittest.TestCase):
    """GetMonitoringOauthAnalytics200ResponseTopClientsInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetMonitoringOauthAnalytics200ResponseTopClientsInner:
        """Test GetMonitoringOauthAnalytics200ResponseTopClientsInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetMonitoringOauthAnalytics200ResponseTopClientsInner`
        """
        model = GetMonitoringOauthAnalytics200ResponseTopClientsInner()
        if include_optional:
            return GetMonitoringOauthAnalytics200ResponseTopClientsInner(
                client_id = '',
                client_name = '',
                count = 1.337,
                success_rate = 1.337
            )
        else:
            return GetMonitoringOauthAnalytics200ResponseTopClientsInner(
                client_id = '',
                client_name = '',
                count = 1.337,
                success_rate = 1.337,
        )
        """

    def testGetMonitoringOauthAnalytics200ResponseTopClientsInner(self):
        """Test GetMonitoringOauthAnalytics200ResponseTopClientsInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
