# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.get_status200_response_fhir import GetStatus200ResponseFhir

class TestGetStatus200ResponseFhir(unittest.TestCase):
    """GetStatus200ResponseFhir unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetStatus200ResponseFhir:
        """Test GetStatus200ResponseFhir
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetStatus200ResponseFhir`
        """
        model = GetStatus200ResponseFhir()
        if include_optional:
            return GetStatus200ResponseFhir(
                status = '',
                total_servers = 1.337,
                healthy_servers = 1.337,
                servers = [
                    api_client.models.get_status_200_response_fhir_servers_inner.getStatus_200_response_fhir_servers_inner(
                        name = '', 
                        url = '', 
                        status = '', 
                        accessible = True, 
                        version = '', 
                        server_name = '', 
                        server_version = '', 
                        error = '', )
                    ]
            )
        else:
            return GetStatus200ResponseFhir(
                status = '',
                total_servers = 1.337,
                healthy_servers = 1.337,
                servers = [
                    api_client.models.get_status_200_response_fhir_servers_inner.getStatus_200_response_fhir_servers_inner(
                        name = '', 
                        url = '', 
                        status = '', 
                        accessible = True, 
                        version = '', 
                        server_name = '', 
                        server_version = '', 
                        error = '', )
                    ],
        )
        """

    def testGetStatus200ResponseFhir(self):
        """Test GetStatus200ResponseFhir"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
