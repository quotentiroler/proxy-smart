# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.post_auth_register_request import PostAuthRegisterRequest

class TestPostAuthRegisterRequest(unittest.TestCase):
    """PostAuthRegisterRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostAuthRegisterRequest:
        """Test PostAuthRegisterRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostAuthRegisterRequest`
        """
        model = PostAuthRegisterRequest()
        if include_optional:
            return PostAuthRegisterRequest(
                redirect_uris = [
                    ''
                    ],
                client_name = '',
                client_uri = '',
                logo_uri = '',
                scope = '',
                contacts = [
                    ''
                    ],
                tos_uri = '',
                policy_uri = '',
                jwks_uri = '',
                jwks = None,
                software_id = '',
                software_version = '',
                fhir_versions = [
                    ''
                    ],
                launch_uris = [
                    ''
                    ]
            )
        else:
            return PostAuthRegisterRequest(
                redirect_uris = [
                    ''
                    ],
        )
        """

    def testPostAuthRegisterRequest(self):
        """Test PostAuthRegisterRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
