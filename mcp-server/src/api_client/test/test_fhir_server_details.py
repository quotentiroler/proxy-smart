# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.fhir_server_details import FhirServerDetails

class TestFhirServerDetails(unittest.TestCase):
    """FhirServerDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FhirServerDetails:
        """Test FhirServerDetails
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FhirServerDetails`
        """
        model = FhirServerDetails()
        if include_optional:
            return FhirServerDetails(
                name = '',
                url = '',
                fhir_version = '',
                server_version = '',
                server_name = '',
                supported = True,
                endpoints = api_client.models.fhir_server_list_servers_inner_endpoints.FhirServerList_servers_inner_endpoints(
                    base = '', 
                    smart_config = '', 
                    metadata = '', 
                    authorize = '', 
                    token = '', 
                    register = '', 
                    manage = '', 
                    introspection = '', 
                    revocation = '', )
            )
        else:
            return FhirServerDetails(
                name = '',
                url = '',
                fhir_version = '',
                supported = True,
                endpoints = api_client.models.fhir_server_list_servers_inner_endpoints.FhirServerList_servers_inner_endpoints(
                    base = '', 
                    smart_config = '', 
                    metadata = '', 
                    authorize = '', 
                    token = '', 
                    register = '', 
                    manage = '', 
                    introspection = '', 
                    revocation = '', ),
        )
        """

    def testFhirServerDetails(self):
        """Test FhirServerDetails"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
