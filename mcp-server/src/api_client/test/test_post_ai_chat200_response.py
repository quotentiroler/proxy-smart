# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.post_ai_chat200_response import PostAiChat200Response

class TestPostAiChat200Response(unittest.TestCase):
    """PostAiChat200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostAiChat200Response:
        """Test PostAiChat200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostAiChat200Response`
        """
        model = PostAiChat200Response()
        if include_optional:
            return PostAiChat200Response(
                answer = '',
                sources = [
                    api_client.models.post_ai_chat_200_response_sources_inner.postAiChat_200_response_sources_inner(
                        id = '', 
                        content = '', 
                        source = '', 
                        title = '', 
                        category = '', 
                        relevance_score = 1.337, )
                    ],
                confidence = 1.337,
                mode = None,
                timestamp = ''
            )
        else:
            return PostAiChat200Response(
                answer = '',
                sources = [
                    api_client.models.post_ai_chat_200_response_sources_inner.postAiChat_200_response_sources_inner(
                        id = '', 
                        content = '', 
                        source = '', 
                        title = '', 
                        category = '', 
                        relevance_score = 1.337, )
                    ],
                confidence = 1.337,
                mode = None,
                timestamp = '',
        )
        """

    def testPostAiChat200Response(self):
        """Test PostAiChat200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
