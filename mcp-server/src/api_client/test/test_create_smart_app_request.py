# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-alpha.202510130118.b027dfe
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.create_smart_app_request import CreateSmartAppRequest

class TestCreateSmartAppRequest(unittest.TestCase):
    """CreateSmartAppRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateSmartAppRequest:
        """Test CreateSmartAppRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateSmartAppRequest`
        """
        model = CreateSmartAppRequest()
        if include_optional:
            return CreateSmartAppRequest(
                client_id = '',
                name = '',
                description = '',
                public_client = True,
                redirect_uris = [
                    ''
                    ],
                web_origins = [
                    ''
                    ],
                default_scopes = [
                    ''
                    ],
                optional_scopes = [
                    ''
                    ],
                smart_version = '',
                fhir_version = '',
                app_type = 'standalone-app',
                client_type = 'public',
                public_key = '',
                jwks_uri = '',
                system_scopes = [
                    ''
                    ]
            )
        else:
            return CreateSmartAppRequest(
                client_id = '',
                name = '',
        )
        """

    def testCreateSmartAppRequest(self):
        """Test CreateSmartAppRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
