# coding: utf-8

"""
    Proxy Smart

    SMART on FHIR Proxy + Healthcare Administration API using Keycloak and Elysia

    The version of the OpenAPI document: 0.0.1-beta.202508171209.d59444a
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from api_client.models.post_auth_token200_response_fhir_context_inner import PostAuthToken200ResponseFhirContextInner

class TestPostAuthToken200ResponseFhirContextInner(unittest.TestCase):
    """PostAuthToken200ResponseFhirContextInner unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PostAuthToken200ResponseFhirContextInner:
        """Test PostAuthToken200ResponseFhirContextInner
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PostAuthToken200ResponseFhirContextInner`
        """
        model = PostAuthToken200ResponseFhirContextInner()
        if include_optional:
            return PostAuthToken200ResponseFhirContextInner(
                reference = '',
                canonical = '',
                identifier = None,
                type = '',
                role = ''
            )
        else:
            return PostAuthToken200ResponseFhirContextInner(
        )
        """

    def testPostAuthToken200ResponseFhirContextInner(self):
        """Test PostAuthToken200ResponseFhirContextInner"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
