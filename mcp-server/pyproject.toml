[project]
name = "smart-fhir-mcp-server"
version = "0.0.1"
description = "MCP server for SMART on FHIR AI Assistant"
authors = [
    {name = "Proxy Smart Team"}
]
requires-python = ">=3.11"
license = {text = "AGPL-3.0-or-later"}
readme = "README.md"

dependencies = [
    "fastapi>=0.119.0",
    "uvicorn[standard]>=0.34.0",
    "pydantic>=2.10.3",
    "pydantic-settings>=2.6.1",
    "python-dotenv>=1.0.1",
    "openai>=1.57.0",
    "sentence-transformers>=3.3.1",
    "numpy>=2.1.3",
    "httpx>=0.28.1",
    "python-multipart>=0.0.20",
    "python-dateutil>=2.8.2",
    "urllib3>=2.1.0,<3.0.0",
    "typing-extensions>=4.7.1",
    "mcp[cli]>=1.17.0",
    "pyjwt>=2.10.0",
    "cryptography>=46.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.4",
    "mypy>=1.13.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "ruff>=0.8.4",
    "mypy>=1.13.0",
]

[tool.ruff]
line-length = 100
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by formatter
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
